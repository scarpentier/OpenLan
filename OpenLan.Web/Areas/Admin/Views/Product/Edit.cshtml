﻿@model OpenLan.Web.Models.Product

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@if (Model != null)
{
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Product</h4>
            <hr />
            @Html.ValidationSummary(true)
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @style = "width: 300px" })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PictureUrl, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.PictureUrl, new { @class = "form-control", @style = "width: 500px;" })
                    @Html.ValidationMessageFor(model => model.PictureUrl)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { @class = "form-control", })
                    @Html.ValidationMessageFor(model => model.Price)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Category, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Category, new { @class = "form-control", @style = "width: 300px;" })
                    @Html.ValidationMessageFor(model => model.Category)
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @style = "height: 200px" })
                    <span class="text-muted"><span class="glyphicon glyphicon-info-sign"></span> Supports <a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet">Markdown</a>. Please use sparingly.</span>
                    @Html.ValidationMessageFor(model => model.Description)
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>
        </div>
    }
}
else
{
    @Html.Label(null, "Unable to locate the product")
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @*TODO : Until script helpers are available, adding script references manually*@
    @*@Scripts.Render("~/bundles/jqueryval")*@
    <script src="@Url.Content("~/Scripts/jquery.validate.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")"></script>
}